[
  {
    "id": "java_1",
    "question": "What does JVM stand for?",
    "options": [
      "Java Virtual Machine",
      "Java Very Machine",
      "Just Virtual Machine",
      "Java Verified Module"
    ],
    "answer": "Java Virtual Machine",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What does JVM stand for?",
      "points": [
        "Correct answer: Java Virtual Machine.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_2",
    "question": "Which Java feature was introduced in Java 8?",
    "options": [
      "Generics",
      "Lambda expressions",
      "Checked exceptions",
      "Unsigned types"
    ],
    "answer": "Lambda expressions",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which Java feature was introduced in Java 8?",
      "points": [
        "Correct answer: Lambda expressions.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_3",
    "question": "Which collection allows null keys?",
    "options": [
      "HashMap",
      "Hashtable",
      "TreeMap",
      "ConcurrentHashMap"
    ],
    "answer": "HashMap",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which collection allows null keys?",
      "points": [
        "Correct answer: HashMap.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_4",
    "question": "What is the output: System.out.println(2 + \"2\")?",
    "options": [
      "4",
      "22",
      "Error",
      "2 2"
    ],
    "answer": "22",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the output: System.out.println(2 + \"2\")?",
      "points": [
        "Correct answer: 22.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_5",
    "question": "Which keyword prevents method overriding?",
    "options": [
      "static",
      "final",
      "private",
      "volatile"
    ],
    "answer": "final",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which keyword prevents method overriding?",
      "points": [
        "Correct answer: final.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_6",
    "question": "Which exception is unchecked?",
    "options": [
      "IOException",
      "SQLException",
      "RuntimeException",
      "ClassNotFoundException"
    ],
    "answer": "RuntimeException",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which exception is unchecked?",
      "points": [
        "Correct answer: RuntimeException.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_7",
    "question": "What is autoboxing?",
    "options": [
      "Primitive to wrapper conversion automatically",
      "Wrapper to primitive",
      "Manual casting",
      "Bytecode optimization"
    ],
    "answer": "Primitive to wrapper conversion automatically",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is autoboxing?",
      "points": [
        "Correct answer: Primitive to wrapper conversion automatically.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_8",
    "question": "Which interface provides random access to list elements?",
    "options": [
      "Queue",
      "List",
      "RandomAccess",
      "Collection"
    ],
    "answer": "List",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which interface provides random access to list elements?",
      "points": [
        "Correct answer: List.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_9",
    "question": "What is the default value for an object reference field?",
    "options": [
      "0",
      "''",
      "null",
      "undefined"
    ],
    "answer": "null",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the default value for an object reference field?",
      "points": [
        "Correct answer: null.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_10",
    "question": "Which method is used to compare strings for content equality?",
    "options": [
      "==",
      "equals()",
      "compareTo()",
      "match()"
    ],
    "answer": "equals()",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which method is used to compare strings for content equality?",
      "points": [
        "Correct answer: equals().",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_11",
    "question": "Explain the difference between ArrayList and LinkedList.",
    "options": [],
    "answer": "ArrayList is backed by an array, provides fast random access; LinkedList is a doubly-linked list, better at frequent insert/delete in middle.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain the difference between ArrayList and LinkedList.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_12",
    "question": "How does Java garbage collection work?",
    "options": [],
    "answer": "Garbage collector reclaims memory of objects without live references using algorithms like generational GC, mark-and-sweep; JVM may have collectors like G1.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How does Java garbage collection work?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_13",
    "question": "Describe how synchronization works and pitfalls of using synchronized.",
    "options": [],
    "answer": "synchronized enforces mutual exclusion on a monitor; pitfalls include deadlocks, reduced concurrency, and potential performance bottlenecks.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe how synchronization works and pitfalls of using synchronized.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_14",
    "question": "How would you design a thread-safe singleton?",
    "options": [],
    "answer": "Use enum singleton or initialization-on-demand holder idiom; avoid double-checked locking pitfalls unless using volatile correctly.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design a thread-safe singleton?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_15",
    "question": "Explain the Java Memory Model and happens-before relationship.",
    "options": [],
    "answer": "JMM defines visibility and ordering guarantees; happens-before ensures writes by one thread are visible to another under synchronization constructs.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain the Java Memory Model and happens-before relationship.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_16",
    "question": "What is the purpose of Lambda expressions in Java?",
    "options": [
      "Option Lambda expressions",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option Lambda expressions",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of Lambda expressions in Java?",
      "points": [
        "Correct answer: Option Lambda expressions.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_17",
    "question": "Describe pros and cons of Lambda expressions.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Lambda expressions.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_18",
    "question": "Which statement about Collections is correct?",
    "options": [
      "True for Collections",
      "True for B",
      "True for C",
      "None"
    ],
    "answer": "True for Collections",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which statement about Collections is correct?",
      "points": [
        "Correct answer: True for Collections.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_19",
    "question": "Describe pros and cons of Collections.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Collections.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_20",
    "question": "Which command is used to Generics?",
    "options": [
      "cmd Generics",
      "cmd B",
      "cmd C",
      "cmd D"
    ],
    "answer": "cmd Generics",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which command is used to Generics?",
      "points": [
        "Correct answer: cmd Generics.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_21",
    "question": "Describe pros and cons of Generics.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Generics.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_22",
    "question": "Which annotation/keyword is used for ClassLoader?",
    "options": [
      "@ClassLoader",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@ClassLoader",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for ClassLoader?",
      "points": [
        "Correct answer: @ClassLoader.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_23",
    "question": "Describe pros and cons of ClassLoader.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of ClassLoader.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_24",
    "question": "What is the purpose of Concurrency in Java?",
    "options": [
      "Option Concurrency",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option Concurrency",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of Concurrency in Java?",
      "points": [
        "Correct answer: Option Concurrency.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_25",
    "question": "How would you design/implement Concurrency in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Concurrency in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_26",
    "question": "Which command is used to JVM tuning?",
    "options": [
      "cmd JVM tuning",
      "cmd B",
      "cmd C",
      "cmd D"
    ],
    "answer": "cmd JVM tuning",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which command is used to JVM tuning?",
      "points": [
        "Correct answer: cmd JVM tuning.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_27",
    "question": "Describe pros and cons of JVM tuning.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of JVM tuning.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_28",
    "question": "Which statement about Streams is correct?",
    "options": [
      "True for Streams",
      "True for B",
      "True for C",
      "None"
    ],
    "answer": "True for Streams",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which statement about Streams is correct?",
      "points": [
        "Correct answer: True for Streams.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_29",
    "question": "Explain how Streams works in Java.",
    "options": [],
    "answer": "Detailed explanation about Streams.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Streams works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_30",
    "question": "Which command is used to Memory model?",
    "options": [
      "cmd Memory model",
      "cmd B",
      "cmd C",
      "cmd D"
    ],
    "answer": "cmd Memory model",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which command is used to Memory model?",
      "points": [
        "Correct answer: cmd Memory model.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_31",
    "question": "How would you design/implement Memory model in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Memory model in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_32",
    "question": "What is the default behavior of Streams?",
    "options": [
      "Behavior Streams",
      "Behavior B",
      "Behavior C",
      "Behavior D"
    ],
    "answer": "Behavior Streams",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the default behavior of Streams?",
      "points": [
        "Correct answer: Behavior Streams.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_33",
    "question": "How would you design/implement Streams in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Streams in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_34",
    "question": "What is the default behavior of Streams?",
    "options": [
      "Behavior Streams",
      "Behavior B",
      "Behavior C",
      "Behavior D"
    ],
    "answer": "Behavior Streams",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the default behavior of Streams?",
      "points": [
        "Correct answer: Behavior Streams.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_35",
    "question": "Explain how Streams works in Java.",
    "options": [],
    "answer": "Detailed explanation about Streams.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Streams works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_36",
    "question": "Which annotation/keyword is used for Memory model?",
    "options": [
      "@Memory model",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@Memory model",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for Memory model?",
      "points": [
        "Correct answer: @Memory model.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_37",
    "question": "Explain how Memory model works in Java.",
    "options": [],
    "answer": "Detailed explanation about Memory model.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Memory model works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_38",
    "question": "What is the default behavior of Lambda expressions?",
    "options": [
      "Behavior Lambda expressions",
      "Behavior B",
      "Behavior C",
      "Behavior D"
    ],
    "answer": "Behavior Lambda expressions",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the default behavior of Lambda expressions?",
      "points": [
        "Correct answer: Behavior Lambda expressions.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_39",
    "question": "How would you design/implement Lambda expressions in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Lambda expressions in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_40",
    "question": "Which annotation/keyword is used for Concurrency?",
    "options": [
      "@Concurrency",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@Concurrency",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for Concurrency?",
      "points": [
        "Correct answer: @Concurrency.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_41",
    "question": "Describe pros and cons of Concurrency.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Concurrency.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_42",
    "question": "Which statement about Garbage Collection is correct?",
    "options": [
      "True for Garbage Collection",
      "True for B",
      "True for C",
      "None"
    ],
    "answer": "True for Garbage Collection",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which statement about Garbage Collection is correct?",
      "points": [
        "Correct answer: True for Garbage Collection.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_43",
    "question": "Describe pros and cons of Garbage Collection.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Garbage Collection.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_44",
    "question": "Which statement about Garbage Collection is correct?",
    "options": [
      "True for Garbage Collection",
      "True for B",
      "True for C",
      "None"
    ],
    "answer": "True for Garbage Collection",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which statement about Garbage Collection is correct?",
      "points": [
        "Correct answer: True for Garbage Collection.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_45",
    "question": "Explain how Garbage Collection works in Java.",
    "options": [],
    "answer": "Detailed explanation about Garbage Collection.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Garbage Collection works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_46",
    "question": "Which command is used to Concurrency?",
    "options": [
      "cmd Concurrency",
      "cmd B",
      "cmd C",
      "cmd D"
    ],
    "answer": "cmd Concurrency",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which command is used to Concurrency?",
      "points": [
        "Correct answer: cmd Concurrency.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_47",
    "question": "How would you design/implement Concurrency in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Concurrency in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_48",
    "question": "Which annotation/keyword is used for Lambda expressions?",
    "options": [
      "@Lambda expressions",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@Lambda expressions",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for Lambda expressions?",
      "points": [
        "Correct answer: @Lambda expressions.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_49",
    "question": "How would you design/implement Lambda expressions in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Lambda expressions in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_50",
    "question": "Which statement about Garbage Collection is correct?",
    "options": [
      "True for Garbage Collection",
      "True for B",
      "True for C",
      "None"
    ],
    "answer": "True for Garbage Collection",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which statement about Garbage Collection is correct?",
      "points": [
        "Correct answer: True for Garbage Collection.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_51",
    "question": "Explain how Garbage Collection works in Java.",
    "options": [],
    "answer": "Detailed explanation about Garbage Collection.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Garbage Collection works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_52",
    "question": "What is the default behavior of Concurrency?",
    "options": [
      "Behavior Concurrency",
      "Behavior B",
      "Behavior C",
      "Behavior D"
    ],
    "answer": "Behavior Concurrency",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the default behavior of Concurrency?",
      "points": [
        "Correct answer: Behavior Concurrency.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_53",
    "question": "Describe pros and cons of Concurrency.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Concurrency.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_54",
    "question": "What is the default behavior of Serialization?",
    "options": [
      "Behavior Serialization",
      "Behavior B",
      "Behavior C",
      "Behavior D"
    ],
    "answer": "Behavior Serialization",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the default behavior of Serialization?",
      "points": [
        "Correct answer: Behavior Serialization.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_55",
    "question": "Explain how Serialization works in Java.",
    "options": [],
    "answer": "Detailed explanation about Serialization.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Serialization works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_56",
    "question": "What is the default behavior of Lambda expressions?",
    "options": [
      "Behavior Lambda expressions",
      "Behavior B",
      "Behavior C",
      "Behavior D"
    ],
    "answer": "Behavior Lambda expressions",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the default behavior of Lambda expressions?",
      "points": [
        "Correct answer: Behavior Lambda expressions.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_57",
    "question": "Describe pros and cons of Lambda expressions.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Lambda expressions.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_58",
    "question": "What is the purpose of Garbage Collection in Java?",
    "options": [
      "Option Garbage Collection",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option Garbage Collection",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of Garbage Collection in Java?",
      "points": [
        "Correct answer: Option Garbage Collection.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_59",
    "question": "Explain how Garbage Collection works in Java.",
    "options": [],
    "answer": "Detailed explanation about Garbage Collection.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Garbage Collection works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_60",
    "question": "Which command is used to Generics?",
    "options": [
      "cmd Generics",
      "cmd B",
      "cmd C",
      "cmd D"
    ],
    "answer": "cmd Generics",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which command is used to Generics?",
      "points": [
        "Correct answer: cmd Generics.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_61",
    "question": "Describe pros and cons of Generics.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Generics.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_62",
    "question": "What is the purpose of Generics in Java?",
    "options": [
      "Option Generics",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option Generics",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of Generics in Java?",
      "points": [
        "Correct answer: Option Generics.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_63",
    "question": "Explain how Generics works in Java.",
    "options": [],
    "answer": "Detailed explanation about Generics.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Generics works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_64",
    "question": "What is the purpose of Collections in Java?",
    "options": [
      "Option Collections",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option Collections",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of Collections in Java?",
      "points": [
        "Correct answer: Option Collections.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_65",
    "question": "How would you design/implement Collections in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Collections in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_66",
    "question": "Which annotation/keyword is used for Lambda expressions?",
    "options": [
      "@Lambda expressions",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@Lambda expressions",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for Lambda expressions?",
      "points": [
        "Correct answer: @Lambda expressions.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_67",
    "question": "Describe pros and cons of Lambda expressions.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Lambda expressions.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_68",
    "question": "What is the purpose of Streams in Java?",
    "options": [
      "Option Streams",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option Streams",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of Streams in Java?",
      "points": [
        "Correct answer: Option Streams.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_69",
    "question": "How would you design/implement Streams in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Streams in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_70",
    "question": "Which command is used to JVM tuning?",
    "options": [
      "cmd JVM tuning",
      "cmd B",
      "cmd C",
      "cmd D"
    ],
    "answer": "cmd JVM tuning",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which command is used to JVM tuning?",
      "points": [
        "Correct answer: cmd JVM tuning.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_71",
    "question": "Explain how JVM tuning works in Java.",
    "options": [],
    "answer": "Detailed explanation about JVM tuning.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how JVM tuning works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_72",
    "question": "What is the default behavior of Concurrency?",
    "options": [
      "Behavior Concurrency",
      "Behavior B",
      "Behavior C",
      "Behavior D"
    ],
    "answer": "Behavior Concurrency",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the default behavior of Concurrency?",
      "points": [
        "Correct answer: Behavior Concurrency.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_73",
    "question": "How would you design/implement Concurrency in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Concurrency in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_74",
    "question": "Which annotation/keyword is used for Concurrency?",
    "options": [
      "@Concurrency",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@Concurrency",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for Concurrency?",
      "points": [
        "Correct answer: @Concurrency.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_75",
    "question": "Describe pros and cons of Concurrency.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Concurrency.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_76",
    "question": "Which annotation/keyword is used for ClassLoader?",
    "options": [
      "@ClassLoader",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@ClassLoader",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for ClassLoader?",
      "points": [
        "Correct answer: @ClassLoader.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_77",
    "question": "How would you design/implement ClassLoader in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement ClassLoader in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_78",
    "question": "Which statement about Lambda expressions is correct?",
    "options": [
      "True for Lambda expressions",
      "True for B",
      "True for C",
      "None"
    ],
    "answer": "True for Lambda expressions",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which statement about Lambda expressions is correct?",
      "points": [
        "Correct answer: True for Lambda expressions.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_79",
    "question": "Describe pros and cons of Lambda expressions.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Lambda expressions.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_80",
    "question": "What is the purpose of Generics in Java?",
    "options": [
      "Option Generics",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option Generics",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of Generics in Java?",
      "points": [
        "Correct answer: Option Generics.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_81",
    "question": "Explain how Generics works in Java.",
    "options": [],
    "answer": "Detailed explanation about Generics.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Generics works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_82",
    "question": "Which annotation/keyword is used for Memory model?",
    "options": [
      "@Memory model",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@Memory model",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for Memory model?",
      "points": [
        "Correct answer: @Memory model.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_83",
    "question": "How would you design/implement Memory model in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Memory model in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_84",
    "question": "What is the default behavior of Memory model?",
    "options": [
      "Behavior Memory model",
      "Behavior B",
      "Behavior C",
      "Behavior D"
    ],
    "answer": "Behavior Memory model",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the default behavior of Memory model?",
      "points": [
        "Correct answer: Behavior Memory model.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_85",
    "question": "Describe pros and cons of Memory model.",
    "options": [],
    "answer": "Pros: ... Cons: ...",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Describe pros and cons of Memory model.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_86",
    "question": "Which annotation/keyword is used for ClassLoader?",
    "options": [
      "@ClassLoader",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@ClassLoader",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for ClassLoader?",
      "points": [
        "Correct answer: @ClassLoader.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_87",
    "question": "Explain how ClassLoader works in Java.",
    "options": [],
    "answer": "Detailed explanation about ClassLoader.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how ClassLoader works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_88",
    "question": "Which statement about ClassLoader is correct?",
    "options": [
      "True for ClassLoader",
      "True for B",
      "True for C",
      "None"
    ],
    "answer": "True for ClassLoader",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which statement about ClassLoader is correct?",
      "points": [
        "Correct answer: True for ClassLoader.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_89",
    "question": "How would you design/implement ClassLoader in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement ClassLoader in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_90",
    "question": "What is the purpose of ClassLoader in Java?",
    "options": [
      "Option ClassLoader",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option ClassLoader",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of ClassLoader in Java?",
      "points": [
        "Correct answer: Option ClassLoader.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_91",
    "question": "How would you design/implement ClassLoader in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement ClassLoader in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_92",
    "question": "Which annotation/keyword is used for Serialization?",
    "options": [
      "@Serialization",
      "@B",
      "@C",
      "@D"
    ],
    "answer": "@Serialization",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which annotation/keyword is used for Serialization?",
      "points": [
        "Correct answer: @Serialization.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_93",
    "question": "Explain how Serialization works in Java.",
    "options": [],
    "answer": "Detailed explanation about Serialization.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Serialization works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_94",
    "question": "Which command is used to Lambda expressions?",
    "options": [
      "cmd Lambda expressions",
      "cmd B",
      "cmd C",
      "cmd D"
    ],
    "answer": "cmd Lambda expressions",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which command is used to Lambda expressions?",
      "points": [
        "Correct answer: cmd Lambda expressions.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_95",
    "question": "How would you design/implement Lambda expressions in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Lambda expressions in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_96",
    "question": "Which statement about Generics is correct?",
    "options": [
      "True for Generics",
      "True for B",
      "True for C",
      "None"
    ],
    "answer": "True for Generics",
    "type": "MCQ",
    "difficulty": "Medium",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: Which statement about Generics is correct?",
      "points": [
        "Correct answer: True for Generics.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_97",
    "question": "Explain how Generics works in Java.",
    "options": [],
    "answer": "Detailed explanation about Generics.",
    "type": "Interview",
    "difficulty": "Medium",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: Explain how Generics works in Java.",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_98",
    "question": "What is the purpose of Streams in Java?",
    "options": [
      "Option Streams",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option Streams",
    "type": "MCQ",
    "difficulty": "Easy",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of Streams in Java?",
      "points": [
        "Correct answer: Option Streams.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  },
  {
    "id": "java_99",
    "question": "How would you design/implement Streams in a production system?",
    "options": [],
    "answer": "Design considerations and steps.",
    "type": "Interview",
    "difficulty": "Hard",
    "isObjective": false,
    "explanation": {
      "intro": "Explanation: How would you design/implement Streams in a production system?",
      "points": [
        "Detailed explanation to highlight important aspects."
      ]
    },
    "askedBy": [
      "interview"
    ],
    "technology": "Java"
  },
  {
    "id": "java_100",
    "question": "What is the purpose of Lambda expressions in Java?",
    "options": [
      "Option Lambda expressions",
      "Option B",
      "Option C",
      "Option D"
    ],
    "answer": "Option Lambda expressions",
    "type": "MCQ",
    "difficulty": "Hard",
    "isObjective": true,
    "explanation": {
      "intro": "Explanation: What is the purpose of Lambda expressions in Java?",
      "points": [
        "Correct answer: Option Lambda expressions.",
        "Key concept to remember related to the question."
      ]
    },
    "askedBy": [
      "interview",
      "practice"
    ],
    "technology": "Java"
  }
]